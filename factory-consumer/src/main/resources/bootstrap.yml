server:
  port: 0


#之所以要用bootstrap.yml，是因为启动SpringBoot项目时，会优先读取bootstrap.yml里的配置，然后才会读取application.yml.如果不通过bootstrap.yml里的配置，先从配置中心拉下相应的配置文件，就会报错
spring:
  application:
    name: consumer-service
  cloud:
    config:      
      discovery:
        enabled: true
        service-id: config-service
      fail-fast: true
#       username: root
#       password: booszy
      name: db-mysql,rabbitmq,zipkin,actuator
      profile: ${spring.profiles.active}
    consul:
      host: 127.0.0.1  #consul节点IP
      port: 8500       #consul节点端口      
      discovery:
        #prefer-ip-address: true #这个可以设置为true
        #ip-address: xxx
        #字符串不能为空,首字符必须为字母,尾字符必须为字母或数字,所有非字母数字的字符统一转换成'-'连接符,同时多个连续连接符转换成一个'-'. 
        #instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.cloud.client.hostname}:${random.int} #实例ID
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.cloud.client.hostname}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}        
        #health-check-path: /actuator/health #健康检查,默认配置，可以注释掉
        #health-check-interval: 10s #默认配置10s，可以注释掉
        #tags: management.context-path=/foo, health.path=/ping #, user.name=user, user.password=password
       
  profiles:
    active: dev
logging:
  #config: classpath=logback-spring.xml
  path: D:\stsworkspace2\factory\data\logs
  file: ${spring.application.name}
  level:
    ROOT: DEBUG