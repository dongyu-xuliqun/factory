server:
  port: 8100
#Spring Boot Admin 用于管理和监控一个或多个Spring Boot程序，在 Spring Boot Actuator 的基础上提供简洁的可视化 WEB UI，提供如下功能：
#显示 name/id 和版本号
#显示在线状态
#Logging 日志级别管理
#JMX beans 管理
#Threads 会话和线程管理
#Trace 应用请求跟踪
#应用运行参数信息，如：
#Java 系统属性
#Java 环境变量属性
#内存信息
#Spring 环境属性
#之所以要用bootstrap.yml，是因为启动SpringBoot项目时，会优先读取bootstrap.yml里的配置，然后才会读取application.yml.如果不通过bootstrap.yml里的配置，先从配置中心拉下相应的配置文件，就会报错
spring:
  application:
    name: admin-service
  cloud:
    config:
      #enabled: false spring boot admin 测试时注释
      discovery:
        enabled: true
        service-id: config-service
      fail-fast: true
#       username: root
#       password: booszy
      name: mail,admin #db-mysql,rabbitmq,zipkin
      profile: ${spring.profiles.active}
  profiles:
    active: dev 
management:
  endpoints:
    web:
      exposure:
        include: "*"
 #       exclude: configprops  #排除对配置信息的监控，每次浏览这个节点的时候，
          #数据库的链接就一直释放不掉，最后导致超时，因为配置信息的监控也不重要，
          #就不再监控这个节点，以下为可监控的endpoint。可以根据需要有选择的进行监控。
            #- health,status,env,metrics,dump,jolokia,info,
            #configprops,trace,logfile,refresh,flyway,
            #liquibase,heapdump,loggers,auditevents,hystrix.stream,activiti      
  endpoint:
    health:
      show-details: ALWAYS    
